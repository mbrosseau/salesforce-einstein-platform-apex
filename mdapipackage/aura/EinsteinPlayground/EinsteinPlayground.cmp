<aura:component implements="flexipage:availableForAllPageTypes" controller="Einstein_PlaygroundController" access="global">

    <aura:attribute name="spinnerWaiting" type="Boolean" default="false" />

    <aura:attribute name="modelsByType" type="object" />
    <aura:attribute name="einsteinEmail" type="Boolean" />
    <aura:attribute name="einsteinCert" type="Boolean" />
    <aura:handler name="waitingEvent" event="c:EventEinsteinWaiting" action="{!c.changeSpinner}" />
    <aura:handler name="modelEvent" event="c:EventEinsteinModels" action="{!c.updateModelSelection}" />

    <aura:handler name="init" value="{!this}" action="{!c.doInitPlayground}" />

    <div class="slds-card insightsContainer runtime_sales_insightsInsightsContainer SFX_HOME">
        <div class="slds-card__header slds-grid">
            <h2 class="einstein-logo-hdr slds-text-heading_small">
                <span class="einstein-logo">
                    <div class="einstein-header-wrapper runtime_sales_insightsEinsteinHeader">
                        <span class="einstein-label">{!v.cardLabel}</span>
                        <span class="uiImage">
                            <img class="einstein-header-icon" src="/resource/einstein_images/einstein_header_icon.svg"></img>
                        </span>
                    </div>
                </span>
            </h2>
        </div>
        
        <div class="slds-card__body slds-card__body_inner">
            
                <div  class="insightsCardsContainer runtime_sales_insightsInsightsCards">
                  
          
    <div class="details">
        <lightning:tabset >
            <lightning:tab >
                <aura:set attribute="label">
                    <lightning:icon iconName="utility:info" size="xx-small" /> Intro
                </aura:set>
                <c:EinsteinPlaygroundIntroduction />
            </lightning:tab>
                <lightning:tab >
                    <aura:set attribute="label">
                        <lightning:icon iconName="utility:preview" size="xx-small" /> Image Classification
                    </aura:set>
                    <c:EinsteinGenericPlaygroundComponent dataType="image" iconName="utility:preview" allModelsByType="{! v.modelsByType }"/>
                </lightning:tab>
                <lightning:tab >
                    <aura:set attribute="label">
                        <lightning:icon iconName="utility:richtextbulletedlist" size="xx-small" /> Image Classification (Multi)
                    </aura:set>
                    <c:EinsteinGenericPlaygroundComponent dataType="image-multi-label" iconName="utility:richtextbulletedlist" allModelsByType="{! v.modelsByType }" />
                </lightning:tab>

                <lightning:tab >
                    <aura:set attribute="label">
                        <lightning:icon iconName="utility:zoomin" size="xx-small" /> Object Detection
                    </aura:set>
                    <c:EinsteinGenericPlaygroundComponent dataType="image-detection" iconName="utility:like" allModelsByType="{! v.modelsByType }" />
                </lightning:tab>
                <lightning:tab >
                    <aura:set attribute="label">
                        <lightning:icon iconName="utility:like" size="xx-small" /> Sentiment
                    </aura:set>
                    <c:EinsteinGenericPlaygroundComponent dataType="text-sentiment" iconName="utility:like" allModelsByType="{! v.modelsByType }" />

                </lightning:tab>
                <lightning:tab >
                    <aura:set attribute="label">
                        <lightning:icon iconName="utility:signpost" size="xx-small" /> Intent
                    </aura:set>
                    <c:EinsteinGenericPlaygroundComponent dataType="text-intent" iconName="utility:signpost" allModelsByType="{! v.modelsByType }" />
                </lightning:tab>

        </lightning:tabset>

        <aura:if isTrue="{! v.spinnerWaiting }">
            <lightning:spinner size="large" />
        </aura:if>

    </div>
                          </div>
                
         
        </div>
    </div>
    

</aura:component>